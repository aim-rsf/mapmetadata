[{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to mapmetadata","title":"Contributing to mapmetadata","text":"warmly welcome contributions mapmetadata project! document provides guidelines contributing repository.","code":""},{"path":[]},{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":"reporting-issues","dir":"","previous_headings":"How to contribute","what":"Reporting issues","title":"Contributing to mapmetadata","text":"Bug Reports: find bug, please open issue clear description problem steps reproduce . Feature Requests: Suggestions new features improvements always welcome. Please open issue discuss ideas.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":"making-changes","dir":"","previous_headings":"How to contribute","what":"Making changes","title":"Contributing to mapmetadata","text":"Fork Repository: Start forking repository GitHub account. Create Feature Branch: Create new branch feature fix. Make Changes: Implement changes, adhering coding standards practices outlined . Test Changes: Ensure changes break existing functionality. Submit Pull Request: Open pull request feature branch main branch original repository.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":"coding-standards","dir":"","previous_headings":"How to contribute","what":"Coding standards","title":"Contributing to mapmetadata","text":"Follow tidyverse style guide R code. Write clear, readable, maintainable code. Include comments documentation needed.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"How to contribute","what":"Documentation","title":"Contributing to mapmetadata","text":"Update README documentation necessary. Clearly describe changes ‚Äôve made benefits.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":"contributing-to-the-r-package---as-an-author-or-reviewer-of-a-pr","dir":"","previous_headings":"","what":"Contributing to the R Package - as an author or reviewer of a PR","title":"Contributing to mapmetadata","text":"contribution involves changes R package (author reviewer PR), specific guidelines, assuming using RStudio editor: Clone GitHub repository locally ensure branches need date remote. > R Studio, can clone clicking File > New Project..., select Version Control, choose Git. Enter repository URL (e.g., https://github.com/aim-rsf/mapmetadata), select directory clone repository , click Create Project. Git tab workspace. Git tab, move branch want make changes (review test changes someone else). Ensure current working directory R package directory cloned (getwd() check setwd() change). Run devtools::load_all() R console. see ‚Ñπ Loading mapmetadata returned. Make changes (review changes made others), commit changes way choose interact git locally! run issues branches seeming date R Studio workspace, consider running remove.packages(\"mapmetadata\") trying steps , case previously installed package library getting way somehow.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":"working-with-package-data","dir":"","previous_headings":"Contributing to the R Package - as an author or reviewer of a PR","what":"Working with package data","title":"Contributing to mapmetadata","text":"Creating .rda Files: create .rda files data directory package, use following command R: Replace dataname actual name data. Viewing Package Data: view data included mapmetadata package, execute: Loading Package Data: load specific data package, use: , replace dataname name data wish load.","code":"usethis::use_data(dataname) data(package='mapmetadata') data(dataname)"},{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":"building-documentation","dir":"","previous_headings":"Contributing to the R Package - as an author or reviewer of a PR","what":"Building documentation","title":"Contributing to mapmetadata","text":"Generating Documentation Files: build documentation files package, use roxygen2 package: generates .Rd files updated roxygen comments.","code":"devtools::document()"},{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":"testing-your-changes-and-check-your-style-sunglasses","dir":"","previous_headings":"Contributing to the R Package - as an author or reviewer of a PR","what":"Testing your changes and check your style üòé","title":"Contributing to mapmetadata","text":"Ensure changes break existing functionality. Run existing tests, consider adding new tests cover changes. helpful functions consider: codemetar::write_codemeta() ensures metadata file date. lintr::lint_package(path = \".\") checks adherence given style, identifying syntax errors possible semantic issues desc::desc_normalize() ensure DESCRIPTION file follows standard structure style styler::style_pkg() ensures consistent code styling match guidelines. devtools::check() runs comprehensive package check. https://docs.ropensci.org/pkgcheck/ (also GitHub Action runs )","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":"submitting-changes","dir":"","previous_headings":"Contributing to the R Package - as an author or reviewer of a PR","what":"Submitting Changes","title":"Contributing to mapmetadata","text":"making changes, test thoroughly. Update documentation reflect changes, applicable. Submit pull request clear description changes benefits bring package.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/CONTRIBUTING.html","id":"questions-or-need-help","dir":"","previous_headings":"","what":"Questions or Need Help?","title":"Contributing to mapmetadata","text":"questions need help, feel free open issue discussion reach maintainers directly. Thank contributing mapmetadata!","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright ¬© 2007 Free Software Foundation, Inc.¬†<http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program‚Äìmake sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers‚Äô authors‚Äô protection, GPL clearly explains warranty free software. users‚Äô authors‚Äô sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users‚Äô freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"‚ÄúLicense‚Äù refers version 3 GNU General Public License. ‚ÄúCopyright‚Äù also means copyright-like laws apply kinds works, semiconductor masks. ‚ÄúProgram‚Äù refers copyrightable work licensed License. licensee addressed ‚Äú‚Äù. ‚ÄúLicensees‚Äù ‚Äúrecipients‚Äù may individuals organizations. ‚Äúmodify‚Äù work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called ‚Äúmodified version‚Äù earlier work work ‚Äúbased ‚Äù earlier work. ‚Äúcovered work‚Äù means either unmodified Program work based Program. ‚Äúpropagate‚Äù work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. ‚Äúconvey‚Äù work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"‚Äúsource code‚Äù work means preferred form work making modifications . ‚ÄúObject code‚Äù means non-source form work. ‚ÄúStandard Interface‚Äù means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. ‚ÄúSystem Libraries‚Äù executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. ‚ÄúMajor Component‚Äù, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . ‚ÄúCorresponding Source‚Äù work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work‚Äôs System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users‚Äô Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work‚Äôs users, third parties‚Äô legal rights forbid circumvention technological measures.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program‚Äôs source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 ‚Äúkeep intact notices‚Äù. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called ‚Äúaggregate‚Äù compilation resulting copyright used limit access legal rights compilation‚Äôs users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. ‚ÄúUser Product‚Äù either (1) ‚Äúconsumer product‚Äù, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, ‚Äúnormally used‚Äù refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. ‚ÄúInstallation Information‚Äù User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"‚ÄúAdditional permissions‚Äù terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered ‚Äúrestrictions‚Äù within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. ‚Äúentity transaction‚Äù transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party‚Äôs predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"‚Äúcontributor‚Äù copyright holder authorizes use License Program work Program based. work thus licensed called contributor‚Äôs ‚Äúcontributor version‚Äù. contributor‚Äôs ‚Äúessential patent claims‚Äù patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, ‚Äúcontrol‚Äù includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor‚Äôs essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, ‚Äúpatent license‚Äù express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). ‚Äúgrant‚Äù patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. ‚ÄúKnowingly relying‚Äù means actual knowledge , patent license, conveying covered work country, recipient‚Äôs use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license ‚Äúdiscriminatory‚Äù include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others‚Äô Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License ‚Äúlater version‚Äù applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy‚Äôs public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM ‚Äú‚Äù WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least ‚Äúcopyright‚Äù line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program‚Äôs commands might different; GUI interface, use ‚Äúbox‚Äù. also get employer (work programmer) school, , sign ‚Äúcopyright disclaimer‚Äù program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://aim-rsf.github.io/mapmetadata/articles/HealthMetadata.html","id":"what-is-metadata","dir":"Articles","previous_headings":"","what":"What is metadata?","title":"Health metadata","text":"Metadata data provides information data. Metadata useful way record relevant information datasets, help users find right data use case, understand data‚Äôs history. Metadata contain full content, like data , describes features properties data, making easier use. Phrases similar meaning data specifications schemas. data dictionary can way storing sharing metadata, often includes information : Data variable names Data types Default values Missing data indicators Linkage datasets Data quality flags","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/articles/HealthMetadata.html","id":"sources-of-health-metadata","dir":"Articles","previous_headings":"","what":"Sources of health metadata","title":"Health metadata","text":"many existing tools resources allow browse metadata health datasets, list :","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/articles/HealthMetadata.html","id":"health-data-research-innovation-gateway-and-the-connected-metadata-catalogue","dir":"Articles","previous_headings":"Sources of health metadata","what":"Health Data Research Innovation Gateway and the connected Metadata Catalogue","title":"Health metadata","text":"metadata used input R package mapmetadata. Managed Health Data Research UK collaboration UK Health Data Research Alliance. information can found Health Data Research Innovation Gateway. Described search-engine ‚Äòportal‚Äô help find health datasets exist UK. datasets discoverable Gateway organisations NHS, research institutes, charities, part UK Health Data Research Alliance. related resource HDRUK Phenotype Library, described comprehensive, open access resource providing research community information, tools, phenotyping algorithms UK electronic health records. Also see Concept Library developed SAIL databank team collaborating organisations.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/articles/HealthMetadata.html","id":"british-heart-foundation-data-science-centre-bhf-dsc-dashboard","dir":"Articles","previous_headings":"Sources of health metadata","what":"British Heart Foundation Data Science Centre (BHF DSC) Dashboard","title":"Health metadata","text":"Offers overview interactive summaries datasets currently available CVD-COVID-UK/COVID-IMPACT within secure Trusted Research Environments (TREs) provided NHS England England, National Data Safe Haven Scotland SAIL databank Wales. dashboard allows exploration data dictionaries, data coverage, data completeness. information can found BHF DSC Dashboard.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/articles/HealthMetadata.html","id":"office-for-national-statistics-ons-secure-research-service-srs-metadata-catalogue","dir":"Articles","previous_headings":"Sources of health metadata","what":"Office for National Statistics (ONS) Secure Research Service (SRS) Metadata Catalogue","title":"Health metadata","text":"Metadata datasets within ONS SRS. possible filter datasets related ‚ÄòHealth‚Äô clicking tag first page. information can found ONS SRS Metadata Catalogue.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/articles/HealthMetadata.html","id":"do-you-know-of-others","dir":"Articles","previous_headings":"Sources of health metadata","what":"Do you know of others?","title":"Health metadata","text":"tools resources . know resource offers accessible health metadata good breadth /depth coverage, please request add !","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/articles/mapmetadata.html","id":"preparing-for-mapping","dir":"Articles","previous_headings":"","what":"Preparing for mapping","title":"mapmetadata tutorial","text":"bar plot produced automatically run metadata_map function demo metadata file, contains metadata National Community Child Health Database (NCCHD). bar plot shows us 13 tables dataset. height bar indicates number variables table: ones lots variables (e.g.¬†CHILD_TRUST) take longer process (caveat: see HDRUK Gateway screenshot ) tables (e.g.¬†CHE_HEALTHYCHILDWALESPROGRAMME) lot empty descriptions. empty description means variable label data type. important note plot summarising variable level metadata .e.¬†description variable . variables also require value level metadata .e.¬†value correspond , 1 = Yes, 2 = , 3 = Unknown. value level metadata can sometimes found lookup tables, provided within variable level description. bar plot can help understand scope dataset, reference HDRUK Gateway page fuller context. instance, table descriptions included structural metadata files included gateway: dataset NCCHD, used demo, structural metadata downloaded https://healthdatagateway.org/en/dataset/360. , include screenshot page; user must click ‚ÄòDownload Data‚Äô ‚ÄòStructural Metadata‚Äô order download file. Please note, working API integration package streamline users.  recommended view descriptions table give context contents use :","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/articles/mapmetadata.html","id":"mapping","dir":"Articles","previous_headings":"","what":"Mapping","title":"mapmetadata tutorial","text":"Use bar plot HDRUK Gateway guide mapping choices. main functionality package aid researcher mapping variables health datasets onto research domains (concepts/latent variables). Run demo mode typing metadata_map(). see R console: Enter 4 follow demo. Demo mode processes first 20 data elements (variables) selected table. can include note table (e.g.¬†project name, processing), press enter leave blank. asked label data elements one () numbers shown Plots tab [0-7]. simple domains [4-7] demo run. research study, domains likely much specific e.g.¬†‚ÄòPrenatal, antenatal, neonatal birth‚Äô ‚ÄòHealth behaviours diet‚Äô. 4 default domains always included [0-3], appended domain list given user.  skips data element means auto-categorised copied previous table already processed (later). chose respond ‚Äò7‚Äô corresponds ‚ÄòHealth info‚Äô domain table. one domain can chosen, separated commas. remember demo -simplified domain labels, likely specific research study. option re-categorisation (note) just made, replying ‚Äòy‚Äô question: completing 20, ask review auto-categorisations made, displaying R console. auto-categorisations based mappings included default look_up.csv. Type get(\"look_up\") R. look-file can changed user. ALF refers ‚ÄòAnonymous Linking Field‚Äô - field used within datasets anonymised encrypted inclusion within SAIL Databank. displaying auto categorisations , show: Press enter now, look good, know can always manually override auto categorisation. ask want review categorisations made. Respond 1 review: displaying categorisations , show: Select want edit: select number, guide categorisation . finished! Take look outputs project directory.","code":"‚Ñπ Running demo mode using package data files ‚Ñπ Using the default look-up table in data/look-up.rda ‚Ñπ Processing dataset '360_NCCHD' containing 13 tables  ‚Ñπ A bar plot should have opened in your browser (also saved to your project directory). Use this bar plot, and the information on the HDRUK Gateway, to guide your mapping approach.  Enter the table number you want to process:    1: BLOOD_TEST      2: BREAST_FEEDING                     3: CHE_HEALTHYCHILDWALESPROGRAMME     4: CHILD                     5: CHILD_BIRTHS    6: CHILD_MEASUREMENT_PROGRAM          7: CHILD_TRUST                        8: EXAM                      9: IMM             10: PATH_BLOOD_TESTS                  11: PATH_SPCM_DETAIL                  12: REFR_IMM_VAC              13: SIG_COND                          Selection: 4 ‚Ñπ Processing Table 4 of 13 (CHILD)  Optional note about this table: tutorial testing ‚Ñπ Data element 1 of 35 (20 left to process) ‚Ñπ Data element 2 of 35 (19 left to process) ‚Ñπ Data element 3 of 35 (18 left to process) ‚Ñπ Data element 4 of 35 (17 left to process)  DATA ELEMENT -----> APGAR_1  DESCRIPTION -----> APGAR 1 score. This is a measure of a baby's physical state at birth with particular reference to asphyxia - taken at 1 minute. Scores 3 and below are generally regarded as critically low; 4-6 fairly low, and 7-10 generally normal. Field can contain high amount of unknowns/non-entries.  DATA TYPE -----> CHARACTER  Categorise data element into domain(s). E.g. 3 or 3,4: 7 Categorisation note (or press enter to continue): your note here Response to be saved is '7'. Would you like to re-do? (y/n): n Select those you want to manually edit:  1: ALF_E 2: ALF_MTCH_PCT 3: ALF_STS_CD 4: AVAIL_FROM_DT 5: GNDR_CD  Enter one or more numbers separated by spaces and then ENTER, or 0 to cancel 1: Would you like to review your categorisations?  1: Yes 2: No  Selection: 1  ‚Ñπ These are the data elements you categorised: 1: APGAR_1 2: APGAR_2 3: BIRTH_ORDER 4: BIRTH_TM 5: BIRTH_WEIGHT ...  Enter one or more numbers separated by spaces and then ENTER, or 0 to cancel 1:"},{"path":"https://aim-rsf.github.io/mapmetadata/articles/mapmetadata.html","id":"understanding-mapping-outputs","dir":"Articles","previous_headings":"","what":"Understanding mapping outputs","title":"mapmetadata tutorial","text":"can view outputs generated demo run, include: bar plot opened browser. save .html file can choose ‚ÄòDownload plot png‚Äô option. data created bar plot. mappings variables CHILD table research domains. mappings previous file, saved longer format. See argument long_output = TRUE metadata_map. log file accompanies MAPPING file, describing features session table processed. simple visual representation mappings, displaying count domain code.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/articles/mapmetadata.html","id":"compare-mapping","dir":"Articles","previous_headings":"","what":"Compare mapping","title":"mapmetadata tutorial","text":"Running function map_compare allow compare mappings two sessions, perhaps two different researchers. function compares csv outputs two sessions, finds differences, asks consensus, creating new output file: CONSENSUS_MAPPING_360_NCCHD_CHILD_timestamp.csv","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rachael Stickland. Author, maintainer. Batool Almarzouq. Contributor. Mahwish Mohammad. Contributor. Daniel Delbarre. Contributor. Nida Ziauddeen. Contributor.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stickland R (2025). mapmetadata: map health metadata onto predefined research domains. doi:10.5281/zenodo.10581499, R package version 3.0.0, https://github.com/aim-rsf/mapmetadata.","code":"@Manual{,   title = {mapmetadata: map health metadata onto predefined research domains},   author = {Rachael Stickland},   year = {2025},   note = {R package version 3.0.0},   doi = {https://doi.org/10.5281/zenodo.10581499},   url = {https://github.com/aim-rsf/mapmetadata}, }"},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"mapmetadata","dir":"","previous_headings":"","what":"Browse and categorise health metadata","title":"Browse and categorise health metadata","text":"Mapping variables concepts","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"what-is-the-mapmetadata-package","dir":"","previous_headings":"","what":"What is the mapmetadata package?","title":"Browse and categorise health metadata","text":"researchers working health datasets, many great resources summarise features datasets (often termed metadata) access . Access metadata can help researchers plan projects prior gaining full access health datasets. Learn health metadata Health Metadata article hosted package website. One comprehensive open resource Health Data Research Gateway, managed Health Data Research UK collaboration UK Health Data Research Alliance. gateway can help researcher address questions : datasets available? features datasets? datasets fit research? access datasets? datasets used community , link others? publications, resources exist, using datasets? mapmetadata package uses structural metadata files, downloaded Health Data Research Gateway. theory, metadata file structure files downloaded gateway can used package. mapmetadata package goes beyond just browsing structural metadata, helps researcher interact metadata map research domains/concepts. Firstly, creates plot (see example ) displaying number variables table, number tables, completeness metadata (.e.¬†whether description variable table exists). Secondly, helps researcher address question variables map onto research domains? (e.g.¬†socioeconomic, childhood adverse events, diagnoses, culture community). package guides users mapping variable predefined research domains. Research domains otherwise called concepts latent variables. speed manual mapping process, package automatically categorises variables frequently occur health datasets (e.g.¬†ID, Sex, Age). package also accounts variables appear across multiple tables within dataset allows users copy categorisations ensure consistency. output files can used later analyses filter visualise variables category.","code":""},{"path":[]},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"installation-and-set-up","dir":"","previous_headings":"Getting started with mapmetadata","what":"Installation and set-up","title":"Browse and categorise health metadata","text":"Run R console: Load library:","code":"install.packages(\"pak\") pak::pak(\"aim-rsf/mapmetadata\") library(mapmetadata)"},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"demo-using-the-r-studio-ide","dir":"","previous_headings":"Getting started with mapmetadata","what":"Demo (using the R Studio IDE)","title":"Browse and categorise health metadata","text":"longer detailed demo, see mapmetadata tutorial page package website. three main functions can interact : metadata_map(), map_compare(), map_convert(). information function, type ?function_name. Run demo mode using files located inst/inputs directory: R console see: can exit (Clt-C Esc) just get summary plot, saved project directory. outputs metadata_map function saved project directory. can change save location adjusting output_dir argument (argument means information given function, alter runs). example metadata_map(output_dir = 'username/sub_directory).  continue, function ask pick table dataset. demo mode, function processes first 20 variables selected table. Follow -screen instructions, categorise variables research domains, using Plot tab reference. demo simplify domains ease use; real scenario, can define specific domains. tips mapping steps, see mapmetadata tutorial page package website.","code":"metadata_map() ‚Ñπ Running demo mode using package data files ‚Ñπ Using the default look-up table in data/look-up.rda ‚Ñπ Processing dataset '360_NCCHD' containing 13 tables  ‚Ñπ A bar plot should have opened in your browser (also saved to your project directory). Use this bar plot, and the information on the HDRUK Gateway, to guide your mapping approach.  Enter the table number you want to process:"},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"using-a-custom-metadata-input-recommended","dir":"","previous_headings":"","what":"Using a custom metadata input (recommended)","title":"Browse and categorise health metadata","text":"can run metadata_map() custom metadata file instead demo input file, map metadata different dataset. Currently, recommended way retrieving metadata files download Health Data Research Gateway. Browse dataset want, click move main page, click ‚ÄòDownload data‚Äô select ‚ÄòStructural Metadata‚Äô - file metadata file input. use download metadata_map(), metadata file name expected ‚ÄòID_Name_Metadata.csv‚Äô ‚ÄòID‚Äô ‚ÄòName‚Äô changed depending specific dataset download. example, demo metadata file used package 360_NCCHD_Metadata.csv, 360 ID given HDRUK Gateway NCCHD abbreviation dataset name (National Community Child Health Database).","code":"new_file <- \"path/ID_Name_Metadata.csv\" demo_domains_file <- system.file(\"inputs/domain_list_demo.csv\", package = \"mapmetadata\")  metadata_map(metadata_file = new_file, domain_file = demo_domains_file)"},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"using-a-custom-domain-list-input-recommended","dir":"","previous_headings":"","what":"Using a custom domain list input (recommended)","title":"Browse and categorise health metadata","text":"can replace default demo domains research-specific domains. Remember domain file input Codes 0, 1, 2 3 automatically appended start domain list, include domain list.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"using-a-custom-lookup-table-input-advanced","dir":"","previous_headings":"","what":"Using a custom lookup table input (advanced)","title":"Browse and categorise health metadata","text":"lookup table governs automatic categorisations. modify default lookup file, ensure domain codes lookup file also included domain file valid outputs.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"tips-and-future-steps","dir":"","previous_headings":"","what":"Tips and future steps","title":"Browse and categorise health metadata","text":"‚Äôre processing multiple tables, save outputs directory enable table copying. feature speed categorisation ensure consistency. can compare categorisations across researchers using map_compare() function. Use output file metadata_map() function input subsequent analysis filter visualise variables research domain.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Browse and categorise health metadata","text":"project licensed GNU General Public License v3.0 - see LICENSE file details. information, refer GNU General Public License.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Browse and categorise health metadata","text":"cite mapmetadata publications: Stickland R (2025). mapmetadata: map health metadata onto predefined research domains. R package version 3.0.0. BibTeX entry LaTeX users:","code":"@Manual{,     title = {mapmetadata: map health metadata onto predefined research domains},     author = {Rachael Stickland},     year = {2025},     note = {R package version 3.0.0},     doi = {https://doi.org/10.5281/zenodo.10581499},    }"},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Browse and categorise health metadata","text":"welcome contributions mapmetadata. Please read Contribution Guidelines details contribute. Report Issues: Found bug? feature request? Report GitHub Issues. Submit Pull Requests: Follow Contribution Guidelines pull requests. Feedback: Share thoughts opening issue.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"contributors-","dir":"","previous_headings":"Contributing","what":"Contributors ‚ú®","title":"Browse and categorise health metadata","text":"Thanks go wonderful people (emoji key): project follows -contributors specification. Contributions kind welcome!","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/index.html","id":"acknowledgements-","dir":"","previous_headings":"","what":"Acknowledgements ‚ú®","title":"Browse and categorise health metadata","text":"Thanks MELD-B research project SAIL Databank team ideas feedback. Thanks Health Data Research Gateway, participating data providers, hosting open metadata. project funded NIHR Artificial Intelligence Multiple Long-Term Conditions (AIM) programme (NIHR202647). views expressed author(s) necessarily NIHR Department Health Social Care.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/consensus_on_mismatch.html","id":null,"dir":"Reference","previous_headings":"","what":"consensus_on_mismatch ‚Äî consensus_on_mismatch","title":"consensus_on_mismatch ‚Äî consensus_on_mismatch","text":"Internal Function: Called within map_compare.R function.  specific data element, compares domain code categorisation two sessions. categorisation differs, prompts user new consensus decision presenting metadata info.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/consensus_on_mismatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"consensus_on_mismatch ‚Äî consensus_on_mismatch","text":"","code":"consensus_on_mismatch(ses_join, table_df, datavar, domain_code_max)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/consensus_on_mismatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"consensus_on_mismatch ‚Äî consensus_on_mismatch","text":"ses_join joined dataframes two sessions table_df Metadata, one table dataset datavar Data Element n domain_code_max maximum allowable domain code integer","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/consensus_on_mismatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"consensus_on_mismatch ‚Äî consensus_on_mismatch","text":"Returns list 2: domain code note consensus decision","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/data_load.html","id":null,"dir":"Reference","previous_headings":"","what":"data_load ‚Äî data_load","title":"data_load ‚Äî data_load","text":"Internal Function: Called within metadata_map function.  Collects inputs needed metadata_map function (defaults user inputs) inputs NULL, loads default inputs. defaults available, prints error user. inputs NULL, loads user-specified inputs.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/data_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data_load ‚Äî data_load","text":"","code":"data_load(csv_file, domain_file, look_up_file, quiet = FALSE)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/data_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data_load ‚Äî data_load","text":"csv_file defined metadata_map domain_file defined metadata_map look_up_file defined metadata_map quiet Default FALSE. Change TRUE quiet cli_alert_info cli_alert_success messages.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/data_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"data_load ‚Äî data_load","text":"list 6: inputs needed metadata_map function run.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/domain_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: List of Domains ‚Äî domain_list","title":"Internal: List of Domains ‚Äî domain_list","text":"Internal Dataset: simplified list domains, demo function metadata_map  data created two steps: domain_list <-  read.csv('inst/inputs/domain_list_demo.csv',header=FALSE) usethis::use_data(domain_list)","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/domain_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: List of Domains ‚Äî domain_list","text":"","code":"data(domain_list)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/domain_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Internal: List of Domains ‚Äî domain_list","text":"data frame 5 rows 1 column","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/domain_list.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Internal: List of Domains ‚Äî domain_list","text":"csv manually created","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/empty_count.html","id":null,"dir":"Reference","previous_headings":"","what":"empty_count ‚Äî empty_count","title":"empty_count ‚Äî empty_count","text":"Internal Function: Called within map_compare.R function.  reads metadata dataframe counts many variables empty descriptions.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/empty_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"empty_count ‚Äî empty_count","text":"","code":"empty_count(dataframe)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/empty_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"empty_count ‚Äî empty_count","text":"dataframe Dataframe representing metadata, 'Section' column factor","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/empty_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"empty_count ‚Äî empty_count","text":"Returns long dataframe 3 columns: Empty (, Yes), Table (table name), N_Variables (count).","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/empty_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: empty_plot ‚Äî empty_plot","title":"Internal: empty_plot ‚Äî empty_plot","text":"function called within metadata_map function.  plots","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/empty_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: empty_plot ‚Äî empty_plot","text":"","code":"empty_plot(dataframe, bar_title)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/empty_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal: empty_plot ‚Äî empty_plot","text":"dataframe Dataframe plot. Output empty_count.R function. bar_title Title plot.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/empty_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal: empty_plot ‚Äî empty_plot","text":"plotly object","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/end_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: end_plot ‚Äî end_plot","title":"Internal: end_plot ‚Äî end_plot","text":"function called within metadata_map function.  summary plot created includes domain code reference table counts domain code categorisations","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/end_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: end_plot ‚Äî end_plot","text":"","code":"end_plot(df, table_name, ref_table)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/end_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal: end_plot ‚Äî end_plot","text":"df Output dataframe domain categorisations table_name Table name ref_table Domain code reference table (domains mapped integers)","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/end_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal: end_plot ‚Äî end_plot","text":"returns ggplot","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/log_output_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: Output log dataframe ‚Äî log_output_df","title":"Internal: Output log dataframe ‚Äî log_output_df","text":"Internal Dataset: Empty log output dataframe metadata_map fill. Created : log_output_df <- data.frame(timestamp = character(1),  mapmetadata = character(1),  initials = character(1),  domain_list_desc = character(1),  dataset = character(1),  table = character(1),  table_note = character(1)) usethis::use_data(log_output_df)","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/log_output_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: Output log dataframe ‚Äî log_output_df","text":"","code":"data(log_output_df)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/log_output_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Internal: Output log dataframe ‚Äî log_output_df","text":"data frame 1 empty row 9 columns","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/log_output_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Internal: Output log dataframe ‚Äî log_output_df","text":"Dataframe manually created package data, using code.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/look_up.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: Auto-categorisations ‚Äî look_up","title":"Internal: Auto-categorisations ‚Äî look_up","text":"list pre-defined pairings data element domain code.  data element metadata_map processes:  contained within look-table, uses auto-categorised domain code rather asking user categorise. data created two steps: look_up <- read.csv('inst/inputs/look_up.csv') usethis::use_data(look_up)","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/look_up.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: Auto-categorisations ‚Äî look_up","text":"","code":"data(look_up)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/look_up.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Internal: Auto-categorisations ‚Äî look_up","text":"data frame variable number rows 3 columns","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/look_up.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Internal: Auto-categorisations ‚Äî look_up","text":"csv manually created","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/map_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"map_compare ‚Äî map_compare","title":"map_compare ‚Äî map_compare","text":"function used running metadata_map function.  compares csv outputs two sessions, finds differences, asks consensus.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/map_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map_compare ‚Äî map_compare","text":"","code":"map_compare(   session_dir,   session1_base,   session2_base,   metadata_file,   domain_file,   output_dir = session_dir,   quiet = FALSE )"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/map_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map_compare ‚Äî map_compare","text":"session_dir directory contain 2 csv files session (LOG_ OUTPUT_), 4 csv files total. session1_base Base file name session 1 e.g. 'NCCHD_BLOOD_TEST_2024-07-05-16-07-38' session2_base Base file name session 2 e.g. 'NCCHD_BLOOD_TEST_2024-07-08-12-03-30' metadata_file full path metadata file used running metadata_map (session 1 session 2) domain_file full path domain file used running metadata_map (session 1 session 2) output_dir path directory consensus output file saved. default, session_dir used. quiet Default FALSE. Change TRUE quiet cli_alert_info cli_alert_success messages.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/map_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"map_compare ‚Äî map_compare","text":"returns csv output, represents consensus decisions session 1 session 2","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/map_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"map_compare ‚Äî map_compare","text":"","code":"# Demo run requires no function inputs but requires user interaction. # See package documentation to guide user inputs. if(interactive()) {     temp_output_dir <- tempdir()     # Locate file paths for the example files in the package     demo_session_dir <- system.file(\"outputs\", package = \"mapmetadata\")     demo_session1_base <- \"360_NCCHD_CHILD_2024-12-19-14-11-55\"     demo_session2_base <- \"360_NCCHD_CHILD_2024-12-19-14-17-45\"     demo_metadata_file <- system.file(\"inputs\",\"360_NCCHD_Metadata.csv\",     package = \"mapmetadata\")     demo_domain_file <- system.file(\"inputs\",\"domain_list_demo.csv\",     package = \"mapmetadata\")      map_compare(     session_dir = demo_session_dir,     session1_base = demo_session1_base,     session2_base = demo_session2_base,     metadata_file = demo_metadata_file,     domain_file = demo_domain_file,     output_dir = temp_output_dir     )}"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/map_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"map_convert ‚Äî map_convert","title":"map_convert ‚Äî map_convert","text":"'MAPPING_' file groups multiple categorisations onto one line e.g. Domain_code read '1,3'  function creates new longer output 'L-MAPPING_' gives categorisation row.  'L-MAPPING_' may useful using csv files later analyses","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/map_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map_convert ‚Äî map_convert","text":"","code":"map_convert(   csv_to_convert,   csv_to_convert_dir,   output_dir = csv_to_convert_dir,   quiet = FALSE )"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/map_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map_convert ‚Äî map_convert","text":"csv_to_convert Name 'MAPPING_' csv file created metadata_map csv_to_convert_dir Location csv_to_convert output_dir Location 'L-MAPPING_' csv file saved. quiet Default FALSE. Change TRUE quiet cli_alert_info cli_alert_success messages. Default csv_to_convert_dir.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/map_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"map_convert ‚Äî map_convert","text":"Returns 'L-MAPPING_' file specified directory","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/map_convert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"map_convert ‚Äî map_convert","text":"","code":"# Locate file path and file name for the example files in the package demo_csv_to_convert_dir <- system.file(\"outputs\", package = \"mapmetadata\") demo_csv_to_convert <- \"MAPPING_360_NCCHD_CHILD_2024-12-19-14-17-45.csv\" temp_output_dir <- tempdir() # Run the function map_convert( csv_to_convert = demo_csv_to_convert, csv_to_convert_dir = demo_csv_to_convert_dir, output_dir = temp_output_dir) #> ‚úî Long format categorisations saved to: #> /tmp/Rtmpsp31GC/L-MAPPING_360_NCCHD_CHILD_2024-12-19-14-17-45.csv"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/mapmetadata-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mapmetadata: Map health metadata onto predefined research domains ‚Äî mapmetadata-package","title":"mapmetadata: Map health metadata onto predefined research domains ‚Äî mapmetadata-package","text":"Prior gaining full access health datasets, explore publicly available metadata map metadata onto predefined research domains. package uses structural metadata files downloaded Health Data Research Gateway (https://healthdatagateway.org/en). theory, metadata file structure files downloaded gateway can used package, package developed tested metadata files gateway .","code":""},{"path":[]},{"path":"https://aim-rsf.github.io/mapmetadata/reference/mapmetadata-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mapmetadata: Map health metadata onto predefined research domains ‚Äî mapmetadata-package","text":"Maintainer: Rachael Stickland rstickland@turing.ac.uk (ORCID) contributors: Batool Almarzouq (ORCID) [contributor] Mahwish Mohammad (ORCID) [contributor] Daniel Delbarre (ORCID) [contributor] Nida Ziauddeen (ORCID) [contributor]","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: CSV metadata File ‚Äî metadata","title":"Internal: CSV metadata File ‚Äî metadata","text":"Example metadata health dataset, demo metadata_map  data created steps: Go https://healthdatagateway.org Navigate dataset interest, select 'Download data'   download Structural Metadata file Shorten name downloaded file e.g. 360_NCCHD_Metadata.csv metadata <- read.csv(\"inst/inputs/360_NCCHD_Metadata.csv\") usethis::use_data(metadata)","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: CSV metadata File ‚Äî metadata","text":"","code":"data(metadata)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Internal: CSV metadata File ‚Äî metadata","text":"Nested lists","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Internal: CSV metadata File ‚Äî metadata","text":"https://healthdatagateway.org/en/dataset/360","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/metadata_map.html","id":null,"dir":"Reference","previous_headings":"","what":"metadata_map ‚Äî metadata_map","title":"metadata_map ‚Äî metadata_map","text":"function read metadata file chosen dataset, loop data elements, ask user map (categorise) data element one domains. domains appear Plots tab user's reference.  categorisations saved csv file, alongside log file summarises session details. speed process, auto-categorisations made function commonly occurring data elements, categorisations data element can copied one table another.  Example inputs provided within package data, user run function demo mode.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/metadata_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metadata_map ‚Äî metadata_map","text":"","code":"metadata_map(   metadata_file = NULL,   domain_file = NULL,   look_up_file = NULL,   output_dir = getwd(),   table_copy = TRUE,   long_output = TRUE,   quiet = FALSE )"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/metadata_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metadata_map ‚Äî metadata_map","text":"metadata_file csv download HDRUK gateway (form ID_Dataset_Metadata.csv). Default 'data/metadata.rda': run '?metadata' see created. domain_file csv file created user, domain separate line, header. Default 'data/domain_list.rda' - run '?domain_list' see created. Note 4 domains added automatically (MATCH/UNSURE, METADATA, ID, DEMOGRAPHICS) therefore included domain_file. look_up_file lookup file makes auto-categorisations intended variables appear regularly health datasets. works 1:1 mappings right now, .e. DataElement listed file. Default 'data/look-.rda' - run '?look_up' see created. output_dir path directory two csv output files saved. Default current working directory. table_copy Turn copying tables (default TRUE). TRUE, categorisations made tables dataset copied ('OUTPUT_' files found output_dir). can useful data elements (variables) appear across multiple tables within one dataset; copying one table next save user time, ensure consistency categorisations across tables. long_output Run map_convert.R create new longer output 'L-OUTPUT_' gives categorisation row. Default TRUE. quiet Default FALSE. Change TRUE quiet cli_alert_info cli_alert_success messages.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/metadata_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metadata_map ‚Äî metadata_map","text":"function return two csv files: 'OUTPUT_' contains mappings 'LOG_' contains details dataset session.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/metadata_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"metadata_map ‚Äî metadata_map","text":"","code":"# Demo run requires no function inputs but requires user interaction. # See package documentation to guide user inputs. if(interactive()) {     temp_output_dir <- tempdir()     metadata_map(output_dir = temp_output_dir) }"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/output_copy.html","id":null,"dir":"Reference","previous_headings":"","what":"output_copy ‚Äî output_copy","title":"output_copy ‚Äî output_copy","text":"Internal Function: Called within metadata_map function.  Searches previous OUTPUT files output_dir, match dataset name.  files exist, removes duplicates autos, stores rest data elements dataframe.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/output_copy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"output_copy ‚Äî output_copy","text":"","code":"output_copy(dataset_name, output_dir, quiet = FALSE)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/output_copy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"output_copy ‚Äî output_copy","text":"dataset_name Name dataset output_dir Output directory searched quiet Default FALSE. Change TRUE quiet cli_alert_info cli_alert_success messages.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/output_copy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"output_copy ‚Äî output_copy","text":"returns list 2: df_prev_exist (boolean) df_prev (NULL populated data elements copy)","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/output_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: Output dataframe ‚Äî output_df","title":"Internal: Output dataframe ‚Äî output_df","text":"Internal Dataset: Empty output dataframe metadata_map fill. Created : output_df <- data.frame(timestamp = character(0),  table = character(0),  data_element_n = character(0),  data_element = character(0),  domain_code = character(0),  note = character(0)) usethis::use_data(output_df)","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/output_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: Output dataframe ‚Äî output_df","text":"","code":"data(output_df)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/output_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Internal: Output dataframe ‚Äî output_df","text":"data frame 0 rows 6 columns","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/output_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Internal: Output dataframe ‚Äî output_df","text":"Dataframe manually created package data, using code.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/ref_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: ref_plot ‚Äî ref_plot","title":"Internal: ref_plot ‚Äî ref_plot","text":"function called within metadata_map function.  plots reference table guide user categorisation domains.  reference table based user inputted domains default domains provided package.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/ref_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: ref_plot ‚Äî ref_plot","text":"","code":"ref_plot(domains)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/ref_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal: ref_plot ‚Äî ref_plot","text":"domains output load_data","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/ref_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal: ref_plot ‚Äî ref_plot","text":"reference table appears Plots tab. list 2 containing derivatives plot, used later metadata_map'","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/user_categorisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: user_categorisation ‚Äî user_categorisation","title":"Internal: user_categorisation ‚Äî user_categorisation","text":"Internal Function: Called within metadata_map function.  displays data properties user requests categorisation domain.  optional note can included categorisation.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/user_categorisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: user_categorisation ‚Äî user_categorisation","text":"","code":"user_categorisation(data_element, data_desc, data_type, domain_code_max)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/user_categorisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal: user_categorisation ‚Äî user_categorisation","text":"data_element Name variable data_desc Description variable data_type Data type variable domain_code_max Max code domain list (0-3 auto included, N included via domain_file)","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/user_categorisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal: user_categorisation ‚Äî user_categorisation","text":"returns list containing decision decision note","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/user_categorisation_loop.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: user_categorisation_loop ‚Äî user_categorisation_loop","title":"Internal: user_categorisation_loop ‚Äî user_categorisation_loop","text":"Internal Function: Called within metadata_map function.  Given specific table number data elements search, checks 3 different sources domain categorisation:  1 - data elements match look-table, auto categorise  2 - data elements match previous table output, copy  3 - match 1 2, data elements categorised user","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/user_categorisation_loop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: user_categorisation_loop ‚Äî user_categorisation_loop","text":"","code":"user_categorisation_loop(   start_v,   end_v,   table_df,   df_prev_exist,   df_prev,   lookup,   df_plots,   output_df,   quiet = FALSE )"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/user_categorisation_loop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal: user_categorisation_loop ‚Äî user_categorisation_loop","text":"start_v Index data element start end_v Index data element end table_df Dataframe table info, extracted metadata file df_prev_exist Boolean indicate previous dataframes exists df_prev Previous dataframes copy (NULL) lookup lookup table enable auto categorisations df_plots Output ref_plot, indicate mac domain code allowed output_df Empty output dataframe, fill quiet Default FALSE. Change TRUE quiet cli_alert_info cli_alert_success messages.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/user_categorisation_loop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal: user_categorisation_loop ‚Äî user_categorisation_loop","text":"output dataframe containing info table, data elements categorisations","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/valid_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"valid_comparison ‚Äî valid_comparison","title":"valid_comparison ‚Äî valid_comparison","text":"Internal Function: Called within map_compare.R function.  reads two inputs see equal.  Warning severity: unequal inputs, gives warning continues.  Danger severity: unequal inputs, exits error message.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/valid_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"valid_comparison ‚Äî valid_comparison","text":"","code":"valid_comparison(input_1, input_2, severity, severity_text)"},{"path":"https://aim-rsf.github.io/mapmetadata/reference/valid_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"valid_comparison ‚Äî valid_comparison","text":"input_1 Input 1 input_2 Input 2 severity Level severity. 'danger' 'warning' severity_text text print inputs equal.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/reference/valid_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"valid_comparison ‚Äî valid_comparison","text":"Returns nothing inputs equal. inputs equal, returns variable text depending level severity.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/news/index.html","id":"mapmetadata-300-2025-01-06","dir":"Changelog","previous_headings":"","what":"mapmetadata 3.0.0 (2025-01-06)","title":"mapmetadata 3.0.0 (2025-01-06)","text":"Thanks part helpful rOpenSci editor comments (https://github.com/ropensci/software-review/issues/674) release makes improvements package, making suitable rOpenSci software review process, based new release going forward.","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/news/index.html","id":"breaking-changes-3-0-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"mapmetadata 3.0.0 (2025-01-06)","text":"package name changed browseMetadata mapmetadata. mapmetadata better reflects function package complies formatting best practice R package naming Combined browse function map function simplify package use user Changed function names match object_verb convention Now using csv (json) metadata input reflect new structure Health Data Research Gateway Removed custom functions, utils already offered ! (similar)","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/news/index.html","id":"new-features-3-0-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"mapmetadata 3.0.0 (2025-01-06)","text":"Clearer detailed user documentation README package website","code":""},{"path":"https://aim-rsf.github.io/mapmetadata/news/index.html","id":"minor-improvements-3-0-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"mapmetadata 3.0.0 (2025-01-06)","text":"Logo replaced reflect new package name Updated DESCRIPTION file directly mention Health Data Research Gateway data source package, normalised DESCRIPTION file formatting Open html output file automatically user‚Äôs browser, insteading prompting user manually Internal functions longer listed package website, user functions Handle temp directories better unit tests, using withr::local_tempdir() Improved unit tests using testthat::local_mocked_bindings","code":""}]
